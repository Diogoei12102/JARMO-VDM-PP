class Player
types
public PlayerNumber = nat1; 
public Score = nat;

values
instance variables
private number: PlayerNumber;
private score: Score := 0;
private piecesOut: nat := 0;
private piecesFinal: nat := 0;

--invariantes
inv number in set {1,2};
inv score >= 0;
inv piecesOut >= 0 and piecesOut <= 5;
inv piecesFinal >= 0 and piecesFinal <= 5

operations
public Player : PlayerNumber ==> Player
	Player(num) == (
		number := num;
		return self
	)
post number in set {1,2};
	
pure public getNumber : () ==> PlayerNumber
		getNumber() == (
			return number;
			);
			
pure public getPiecesOut : () ==> nat
		getPiecesOut() == (
			return piecesOut;
);

pure public getPiecesFinal : () ==> nat
		getPiecesFinal() == (
			return piecesFinal;
);

public addPiecesFinal : () ==> ()
		addPiecesFinal() == (
			piecesFinal := piecesFinal + 1;
)
post piecesFinal <= 5;

public subPiecesFinal : () ==> ()
		subPiecesFinal() == (
			piecesFinal := piecesFinal - 1;
)
post not piecesFinal < 0;

public addPiecesOut : () ==> ()
		addPiecesOut() == (
			piecesOut := piecesOut + 1;
)
post piecesOut <= 5;

public subPiecesOut : () ==> ()
		subPiecesOut() == (
			piecesOut := piecesOut - 1;
)
post not piecesOut < 0;

public setScore : nat  ==> ()
		setScore(sc) == (
			score := sc;
)
pre sc >= 0; 

pure public getScore : () ==> nat
		getScore() == (
			return score;
);

end Player